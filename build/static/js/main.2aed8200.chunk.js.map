{"version":3,"sources":["styles/HeaderStyle.js","components/Header.js","components/Footer.js","styles/SearchPageStyles.js","setNames.js","components/SearchForm.js","styles/GlobalStyle.js","components/SearchResultCard.js","components/SearchResults.js","components/SearchPage.js","components/AccountPage.js","components/CardShowPage.js","components/NewDeckForm.js","components/DeckBox.js","components/DeckPage.js","components/DeckShowPage.js","styles/AuthStyles.js","components/RegisterForm.js","components/LoginForm.js","services/api_helper.js","App.js","index.js"],"names":["StyledHeader","Styled","header","StyledNav","nav","StyledNavLink","li","Header","props","to","currentUser","username","onClick","handleLogout","Footer","SearchPage","SearchForm","form","SearchFormContainer","div","ColorContainer","SearchResults","SearchHeader","h2","ResultInfo","p","ResultsList","ul","ResultCard","ResultCardArt","img","CardInfo","SetNames","onSubmit","e","preventDefault","type","name","placeholder","onChange","handleInputChange","defaultValue","disabled","hidden","map","setName","index","id","value","htmlFor","searchFields","supertypes","supertype","types","subtypes","subtype","GlobalStyle","createGlobalStyle","Bold","span","SearchResultCard","useState","card","cardData","selectedDeckId","setSelectedDeckId","isCreature","forEach","console","log","commanderCandidate","isLegendary","deckOptions","userDecks","deck","push","src","image_url","alt","text","flavor","power","toughness","rarity","set_name","handleAddCard","target","searchResults","setSearchResults","buildUrl","searchUrl","searchParameters","set","white","blue","black","green","red","colorless","useEffect","fetch","then","res","json","length","inputValue","checked","setState","state","this","Component","AccountPage","CardShowPage","useParams","setCardData","catch","err","error","NewDeckForm","deckName","deckDescription","user_id","formData","setFormData","handleChange","prevState","handleNewDeck","DeckBox","description","commander_id","DeckPage","DeckShowPage","deck_id","handleGetSingleDeck","deckData","cards","StyledAuthForm","RegisterForm","password","handleRegister","LoginForm","handleLogin","api","axios","create","baseURL","registerUser","registerData","a","post","resp","localStorage","setItem","data","token","defaults","headers","common","authorization","user","loginUser","loginData","verifyUser","getItem","get","newDeck","getUserDecks","getDeck","addDeckCard","deckCardIds","card_id","getSupertypes","getTypes","getSubtypes","App","handleVerify","handleGetDecks","removeItem","handlePopulateSearchFields","className","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0xBAEO,IAAMA,EAAeC,IAAOC,OAAV,KASZC,EAAYF,IAAOG,IAAV,KAQTC,EAAgBJ,IAAOK,GAAV,KCqBXC,EAnCA,SAACC,GACZ,OACI,eAAC,EAAD,WACI,cAAC,IAAD,CAAMC,GAAG,IAAT,SACI,qDAEHD,EAAME,YACH,eAAC,EAAD,WACI,cAAC,EAAD,UACI,cAAC,IAAD,CAAMD,GAAG,IAAT,0BAEJ,cAAC,EAAD,UACI,cAAC,IAAD,CAAMA,GAAG,SAAT,wBAEJ,cAAC,EAAD,UACI,eAAC,IAAD,CAAMA,GAAG,WAAT,UAAqBD,EAAME,YAAYC,SAAvC,mBAEJ,cAAC,EAAD,UACI,cAAC,IAAD,CAAMF,GAAG,IAAT,SAAa,wBAAQG,QAASJ,EAAMK,aAAvB,2BAIrB,eAAC,EAAD,WACI,cAAC,EAAD,UACI,cAAC,IAAD,CAAMJ,GAAG,SAAT,qBAEJ,cAAC,EAAD,UACI,cAAC,IAAD,CAAMA,GAAG,YAAT,+BCrBTK,EATA,WACX,OACI,8BACI,+C,+pDCHL,IAAMC,EAAad,IAAOC,OAAV,KAKVc,EAAaf,IAAOgB,KAAV,KAUVC,EAAsBjB,IAAOkB,IAAV,KAQnBC,EAAiBnB,IAAOkB,IAAV,KAIdE,EAAepB,IAAOkB,IAAT,KAMbG,EAAerB,IAAOsB,GAAV,KAKZC,EAAavB,IAAOwB,EAAV,KAIVC,EAAczB,IAAO0B,GAAV,KAOXC,EAAa3B,IAAOkB,IAAV,KAWVU,EAAgB5B,IAAO6B,IAAV,KASbC,EAAW9B,IAAOkB,IAAV,KCvERa,EAAW,CACpB,gBACA,eACA,YACA,WACA,uBACA,sBACA,cACA,cACA,aACA,iBACA,YACA,yBACA,kBACA,aACA,sBACA,wBACA,mBACA,+BACA,wBACA,aACA,wBACA,WACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,gCACA,sBACA,sBACA,oBACA,6BACA,aACA,UACA,gBACA,gBACA,gBACA,iBACA,YACA,cACA,aACA,YACA,iBACA,oBACA,gBACA,iBACA,gBACA,kBACA,WACA,SACA,sBACA,iBACA,gBACA,aACA,gBACA,iBACA,yBACA,+BACA,0BACA,yBACA,0BACA,uBACA,yBACA,yBACA,4BACA,yBACA,eACA,YACA,YACA,oBACA,YACA,sBACA,UACA,iBACA,4BACA,WACA,YACA,SACA,mBACA,+BACA,WACA,YACA,WACA,sBACA,kBACA,UACA,UACA,wBACA,uBACA,SACA,aACA,aACA,aACA,aACA,aACA,aACA,gBACA,kBACA,qBACA,sBACA,qBACA,oBACA,SACA,WACA,oBACA,kBACA,sBACA,sBACA,iBACA,cACA,kBACA,iCACA,iBACA,UACA,eACA,gBACA,wBACA,UACA,YACA,eACA,aACA,aACA,SACA,oBACA,wBACA,WACA,qBACA,0BACA,oBACA,kBACA,sBACA,mBACA,sBACA,oBACA,UACA,mBACA,kBACA,aACA,yBACA,kBACA,4BACA,8BACA,+BACA,aACA,oBACA,UACA,qBACA,gBACA,WACA,SACA,sBACA,qBACA,qBACA,cACA,yBACA,0BACA,UACA,cACA,mBACA,UACA,WACA,oBACA,eACA,WACA,iBACA,gBACA,cACA,kBACA,UACA,mBACA,eACA,YACA,WACA,uBACA,kBACA,4BACA,+BCxCWhB,EAxII,SAACR,GAKhB,OACI,eAAC,EAAD,CAAcyB,SAAU,SAACC,GAAQA,EAAEC,kBAAnC,UACI,eAAC,EAAD,WACI,4CACA,uBACIC,KAAK,OACLC,KAAK,OACLC,YAAY,YACZC,SAAU/B,EAAMgC,oBAEpB,yBACIH,KAAK,MACLE,SAAU/B,EAAMgC,kBAChBC,aAAa,MAHjB,UAKI,wBAAQC,UAAQ,EAACC,QAAM,EAAvB,iBACA,yCACCX,EAASY,KAAI,SAACC,EAASC,GACpB,OAAO,iCAAqBD,GAARC,YAIhC,eAAC,EAAD,WACI,gDACA,eAAC,EAAD,WACI,uBACIV,KAAK,WACLW,GAAG,QACHV,KAAK,QACLW,MAAM,OACNT,SAAU/B,EAAMgC,oBAEpB,uBAAOS,QAAQ,QAAf,sBAEJ,eAAC,EAAD,WACI,uBACIb,KAAK,WACLW,GAAG,OACHV,KAAK,OACLW,MAAM,OACNT,SAAU/B,EA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","file":"static/js/main.2aed8200.chunk.js","sourcesContent":["import Styled from \"styled-components\";\n\nexport const StyledHeader = Styled.header`\n    display: flex;\n    flex-flow: row wrap;\n    justify-content: space-between;\n    align-items: center;\n    background: #b5904c;\n    padding: 10px;\n`\n\nexport const StyledNav = Styled.nav`\n    display: flex;\n    flex-flow: row nowrap;\n    justify-content: space-between;\n    align-items: center;\n    list-style: none;\n`\n\nexport const StyledNavLink = Styled.li`\n    padding: 15px;\n    height: 100%;\n`\n\n\n","import React from 'react';\n\nimport { Link } from 'react-router-dom';\nimport * as H from \"../styles/HeaderStyle\";\n\nconst Header = (props) => {\n    return (\n        <H.StyledHeader>\n            <Link to='/'>\n                <h1>The Command Tower</h1>\n            </Link>\n            {props.currentUser ?\n                <H.StyledNav>\n                    <H.StyledNavLink>\n                        <Link to='/'>Find Cards</Link>\n                    </H.StyledNavLink>\n                    <H.StyledNavLink>\n                        <Link to='/decks'>My Decks</Link>\n                    </H.StyledNavLink>\n                    <H.StyledNavLink>\n                        <Link to='/account'>{props.currentUser.username}'s' Account</Link>\n                    </H.StyledNavLink>\n                    <H.StyledNavLink>\n                        <Link to='/'><button onClick={props.handleLogout}>Logout</button></Link>\n                    </H.StyledNavLink>\n                </H.StyledNav>\n                :\n                <H.StyledNav>\n                    <H.StyledNavLink>\n                        <Link to='/login'>Login</Link>\n                    </H.StyledNavLink>\n                    <H.StyledNavLink>\n                        <Link to='/register'>Register</Link>\n                    </H.StyledNavLink>\n                </H.StyledNav>\n            }\n        </H.StyledHeader>\n    )\n}\n\nexport default Header","import React from 'react'\n\nconst Footer = () => {\n    return (\n        <div>\n            <h4>The Footer</h4>\n        </div>\n    )\n}\n\n\nexport default Footer","import Styled from \"styled-components\";\n\nexport const SearchPage = Styled.header`\n   display: flex;\n   flex-flow: column nowrap;\n`\n\nexport const SearchForm = Styled.form`\n    background: green;\n    display: flex;\n    flex-flow: row nowrap;\n    justify-content: space-between;\n    margin: 0 auto;\n    padding: 10px;\n    width: 60vw;\n`\n\nexport const SearchFormContainer = Styled.div`\n    display: flex;\n    flex-flow: column nowrap;\n    width: 30%;\n    align-items: center;\n    padding: 10px;\n`\n\nexport const ColorContainer = Styled.div`\n    width: 50%;\n`\n\nexport const SearchResults =Styled.div`\n    background: lemonchiffon;\n    width: 100%;\n    margin: 0 auto;\n`\n\nexport const SearchHeader = Styled.h2`\n    margin: 0;\n    text-align: center;\n`\n    \nexport const ResultInfo = Styled.p`\n    text-align: center;\n`\n\nexport const ResultsList = Styled.ul`\n    display: flex;\n    flex-flow: row wrap;\n    justify-content: space-around;\n    padding-inline-start: 0px;\n`\n\nexport const ResultCard = Styled.div`\n    display: flex;\n    flex-flow: row nowrap;\n    align-items: center;\n    justify-content: center;\n    width: 30%;\n    background: lightblue;\n    padding: 10px;\n    margin: 5px;\n`\n\nexport const ResultCardArt = Styled.img`\n    width: 250px;\n    height: 350px;\n    &:hover {\n        opacity: 70%;\n    }\n`\n\n\nexport const CardInfo = Styled.div`\n    padding: 10px;\n    width: 60%;\n`","export const SetNames = [\n    'Aether Revolt',\n    'Alara Reborn',\n    'Alliances',\n    'Amonkhet',\n    'Amonkhet Invocations',\n    'Amonkhet Remastered',\n    'Anthologies',\n    'Antiquities',\n    'Apocalypse',\n    'Arabian Nights',\n    'Archenemy',\n    'Archenemy: Nicol Bolas',\n    'Avacyn Restored',\n    'Battlebond',\n    'Battle for Zendikar',\n    'Betrayers of Kamigawa',\n    'Born of the Gods',\n    \"Born of the Gods Hero's Path\",\n    \"Champions of Kamigawa\",\n    'Chronicles',\n    'Classic Sixth Edition',\n    'Coldsnap',\n    'Commander 2011',\n    'Commander 2013',\n    'Commander 2014',\n    'Commander 2015',\n    'Commander 2016',\n    'Commander 2017',\n    'Commander 2018',\n    'Commander 2019',\n    'Commander 2020',\n    'Commander Anthology Volume II',\n    'Commander Anthology',\n    \"Commander's Arsenal\",\n    'Commander Legends',\n    'Conspiracy: Take the Crown',\n    'Conspiracy',\n    'Conflux',\n    'Core Set 2019',\n    'Core Set 2020',\n    'Core Set 2021',\n    'Dark Ascension',\n    'Darksteel',\n    'Deckmasters',\n    'Dissension',\n    'Dominaria',\n    'Double Masters',\n    'Dragons of Tarkir',\n    \"Dragon's Maze\",\n    'Eighth Edition',\n    'Eldritch Moon',\n    'Eternal Masters',\n    'Eventide',\n    'Exodus',\n    'Explorers of Ixalan',\n    'Fallen Empires',\n    'Fate Reforged',\n    'Fifth Dawn',\n    'Fifth Edition',\n    'Fourth Edition',\n    'From the Vault: Angels',\n    'From the Vault: Annihilation',\n    'From the Vault: Dragons',\n    'From the Vault: Exiled',\n    'From the Vault: Legends',\n    'From the Vault: Lore',\n    'From the Vault: Realms',\n    'From the Vault: Relics',\n    'From the Vault: Transform',\n    'From the Vault: Twenty',\n    'Future Sight',\n    'Gatecrash',\n    'Guildpact',\n    'Guilds of Ravnica',\n    'Homelands',\n    'Hour of Devastation',\n    'Ice Age',\n    'Iconic Masters',\n    'Ikoria: Lair of Behemoths',\n    'Invasion',\n    'Innistrad',\n    'Ixalan',\n    'Journey into Nyx',\n    \"Journey into Nyx Hero's Path\",\n    'Judgment',\n    'Jumpstart',\n    'Kaladesh',\n    'Kaladesh Inventions',\n    'Khans of Tarkir',\n    'Legends',\n    'Legions',\n    'Limited Edition Alpha',\n    'Limited Edition Beta',\n    'Lorwyn',\n    'Magic 2010',\n    'Magic 2011',\n    'Magic 2012',\n    'Magic 2013',\n    'Magic 2014',\n    'Magic 2015',\n    'Magic Origins',\n    'Masters Edition',\n    'Masters Edition II',\n    'Masters Edition III',\n    'Masters Edition IV',\n    'Mercadian Masques',\n    'Mirage',\n    'Mirrodin',\n    'Mirrodin Besieged',\n    'Modern Horizons',\n    'Modern Masters 2015',\n    'Modern Masters 2017',\n    'Modern Masters',\n    'Morningtide',\n    'Mystery Booster',\n    'Mystery Booster Playtest Cards',\n    'Mythic Edition',\n    'Nemesis',\n    'New Phyrexia',\n    'Ninth Edition',\n    'Oath of the Gatewatch',\n    'Odyssey',\n    'Onslaught',\n    'Planar Chaos',\n    'Planechase',\n    'Planeshift',\n    'Portal',\n    'Portal Second Age',\n    'Portal Three Kingdoms',\n    'Prophecy',\n    'Ravnica Allegiance',\n    'Ravnica: City of Guilds',\n    'Return to Ravnica',\n    'Revised Edition',\n    'Rise of the Eldrazi',\n    'Rivals of Ixalan',\n    'Saviors of Kamigawa',\n    'Scars of Mirrodin',\n    'Scourge',\n    'Secret Lair Drop',\n    'Seventh Edition',\n    'Shadowmoor',\n    'Shadows over Innistrad',\n    'Shards of Alara',\n    'Signature Spellbook: Jace',\n    'Signature Spellbook: Gideon',\n    'Signature Spellbook: Chandra',\n    'Stronghold',\n    'Tarkir Dragonfury',\n    'Tempest',\n    'Tempest Remastered',\n    'Tenth Edition',\n    'The Dark',\n    'Theros',\n    'Theros Beyond Death',\n    \"Theros Hero's Path\",\n    'Throne of Eldraine',\n    'Time Spiral',\n    'Time Spiral Remastered',\n    'Time Spiral Timeshifted',\n    'Torment',\n    \"Ugin's Fate\",\n    'Ultimate Masters',\n    'Unglued',\n    'Unhinged',\n    'Unlimited Edition',\n    'Unsanctioned',\n    'Unstable',\n    \"Urza's Destiny\",\n    \"Urza's Legacy\",\n    \"Urza's Saga\",\n    'Vintage Masters',\n    'Visions',\n    'War of the Spark',\n    'Weatherlight',\n    'Worldwake',\n    'Zendikar',\n    'Zendikar Expeditions',\n    'Zendikar Rising',\n    'Zendikar Rising Commander',\n    'Zendikar Rising Expeditions',\n]\n","import React, { useEffect } from 'react';\n\nimport * as S from '../styles/SearchPageStyles';\nimport { SetNames } from '../setNames';\n\nconst SearchForm = (props) => {\n    // useEffect(() => {\n\n    // });\n\n    return (\n        <S.SearchForm onSubmit={(e) => { e.preventDefault(); }}>\n            <S.SearchFormContainer>\n                <h2>Find Cards</h2>\n                <input\n                    type='text'\n                    name='name'\n                    placeholder='Card Name'\n                    onChange={props.handleInputChange}\n                />\n                <select\n                    name='set'\n                    onChange={props.handleInputChange}\n                    defaultValue='Any'\n                >\n                    <option disabled hidden>Set</option>\n                    <option>Any</option>\n                    {SetNames.map((setName, index) => {\n                        return <option key={index}>{setName}</option>\n                    })}\n                </select>\n            </S.SearchFormContainer>\n            <S.SearchFormContainer>\n                <h3>Color Identity</h3>\n                <S.ColorContainer>\n                    <input\n                        type=\"checkbox\"\n                        id=\"white\"\n                        name=\"white\"\n                        value=\"True\"\n                        onChange={props.handleInputChange}\n                    />\n                    <label htmlFor=\"white\">White</label>\n                </S.ColorContainer>\n                <S.ColorContainer>\n                    <input\n                        type=\"checkbox\"\n                        id=\"blue\"\n                        name=\"blue\"\n                        value=\"True\"\n                        onChange={props.handleInputChange}\n                    />\n                    <label htmlFor=\"blue\">Blue</label>\n                </S.ColorContainer>\n                <S.ColorContainer>\n                    <input\n                        type=\"checkbox\"\n                        id=\"black\"\n                        name=\"black\"\n                        value=\"True\"\n                        onChange={props.handleInputChange}\n                    />\n                    <label htmlFor=\"black\">Black</label>\n                </S.ColorContainer>\n                <S.ColorContainer>\n                    <input\n                        type=\"checkbox\"\n                        id=\"red\"\n                        name=\"red\"\n                        value=\"True\"\n                        onChange={props.handleInputChange}\n                    />\n                    <label htmlFor=\"red\">Red</label>\n                </S.ColorContainer>\n                <S.ColorContainer>\n                    <input\n                        type=\"checkbox\"\n                        id=\"green\"\n                        name=\"green\"\n                        value=\"True\"\n                        onChange={props.handleInputChange}\n                    />\n                    <label htmlFor=\"green\">Green</label>\n                </S.ColorContainer>\n                <S.ColorContainer>\n                    <input\n                        type=\"checkbox\"\n                        id=\"colorless\"\n                        name=\"colorless\"\n                        value=\"True\"\n                        onChange={props.handleInputChange}\n                    />\n                    <label htmlFor=\"colorless\">Colorless</label>\n                </S.ColorContainer>\n            </S.SearchFormContainer>\n            <S.SearchFormContainer>\n                <h3>Card Type</h3>\n                {props.searchFields.supertypes &&\n                    <select\n                        name='supertype'\n                        onChange={props.handleInputChange}\n                        defaultValue='Supertype'\n                    >\n                        <option disabled hidden>Supertype</option>\n                        <option>Any</option>\n                        {props.searchFields.supertypes.map(supertype => {\n                            return <option key={supertype.id}>{supertype.supertype}</option>\n                        })}\n                    </select>\n                }\n                {props.searchFields.types &&\n                    <select\n                        name='type'\n                        onChange={props.handleInputChange}\n                        defaultValue='Type'\n                    >\n                        <option disabled hidden>Type</option>\n                        <option>Any</option>\n                        {props.searchFields.types.map(type => {\n                            return <option key={type.id}>{type.type}</option>\n                        })}\n                    </select>\n                }\n                {props.searchFields.subtypes &&\n                    <select\n                        name='subtype'\n                        onChange={props.handleInputChange}\n                        defaultValue='Subtype'\n                    >\n                        <option disabled hidden>Subtype</option>\n                        <option>Any</option>\n                        {props.searchFields.subtypes.map(subtype => {\n                            return <option key={subtype.id}>{subtype.subtype}</option>\n                        })}\n                    </select>\n                }\n            </S.SearchFormContainer>\n        </S.SearchForm>\n    )\n}\n\nexport default SearchForm\n","import Styled, {createGlobalStyle} from 'styled-components';\n\n\nexport const GlobalStyle = createGlobalStyle`\n  a {\n    color: black;\n    text-decoration: none\n  }\n  a:visited {\n    color: black;\n  }  \n`\n\nexport const Bold = Styled.span`\n    font-weight: bold;\n`","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom';\n\nimport * as S from '../styles/SearchPageStyles';\nimport { Bold } from '../styles/GlobalStyle';\n\n\nconst SearchResultCard = (props) => {\n    const [cardData] = useState(props.card)\n    const [selectedDeckId, setSelectedDeckId] = useState(null)\n\n    let isCreature = false;\n    if (cardData.types) {\n        cardData.types.forEach(type => {\n            console.log(type)\n            if (type.type === \"Creature\") {\n                isCreature = true;\n            }\n        });\n    }\n\n    let isLegendary = false;\n    if (cardData.supertypes) {\n        cardData.supertypes.forEach(supertype => {\n            console.log(supertype);\n            if (supertype.supertype === \"Legendary\") {\n                isLegendary = true;\n            }\n        });\n    }\n\n    let commanderCandidate;\n    if (isCreature && isLegendary) {\n        commanderCandidate = true;\n    } else {\n        commanderCandidate = false;\n    }\n\n\n\n    let deckOptions = []\n    if (props.userDecks) {\n        props.userDecks.forEach(deck => {\n            console.log(deck.name)\n            deckOptions.push(\n                <option value={deck.id} key={deck.id} >{deck.name}</option>\n            )\n        })\n    }\n\n    const handleDeckChange = (e) => {\n        console.log(e.target.value)\n\n        setSelectedDeckId(e.target.value)\n    }\n\n\n    return (\n        <S.ResultCard>\n            <Link to={`/card/${cardData.id}`}>\n                <S.ResultCardArt src={cardData.image_url} alt={`${cardData.name} card art`} />\n            </Link>\n            <S.CardInfo>\n                <h3>{cardData.name}</h3>\n                <h4>\n                    {cardData.supertypes && cardData.supertypes.map(supertype => {\n                        return <span key={supertype.id}>{supertype.supertype} </span>\n                    })}\n                    {cardData.types && cardData.types.map(type => {\n                        return <span key={type.id}>{type.type} </span>\n                    })}\n                    {cardData.subtypes && cardData.subtypes.map(subtype => {\n                        return <span key={subtype.id}> - {subtype.subtype} </span>\n                    })}\n                </h4>\n                <p>{cardData.text}</p>\n                <p>{cardData.flavor}</p>\n                {isCreature &&\n                    <div>\n                        <p><Bold>Power:</Bold> {cardData.power}</p>\n                        <p><Bold>Toughness:</Bold> {cardData.toughness}</p>\n                    </div>\n                }\n                <p><Bold>Rarity:</Bold> {cardData.rarity}</p>\n                <p><Bold>Set:</Bold> {cardData.set_name}</p>\n                {props.userDecks &&\n                    <form onSubmit={(e) => props.handleAddCard(e, cardData.id, selectedDeckId)} >\n                        <select\n                            onChange={handleDeckChange}\n                            defaultValue='Select Deck'\n                        >\n                            <option disabled hidden>Select Deck</option>\n\n                            {deckOptions}\n                        </select>\n                        {commanderCandidate &&\n                            <div>\n                                <input type='checkbox' name='makeCommander' />\n                                <label htmlFor=\"makeCommander\">Make Commander</label>\n                            </div>\n                        }\n                        <input type='submit' value='Add to Deck' />\n                    </form>\n                }\n            </S.CardInfo>\n        </S.ResultCard>\n    )\n}\n\nexport default SearchResultCard","import React, { useState, useEffect } from 'react';\n\nimport SearchResultCard from './SearchResultCard'\nimport * as S from '../styles/SearchPageStyles';\n\n\nconst SearchResults = (props) => {\n    const [searchResults, setSearchResults] = useState(null)\n\n    const callAPI = () => {\n        fetch(buildUrl())\n            .then(res => res.json())\n            .then(res => {\n                setSearchResults(res)\n            });\n    }\n\n    const buildUrl = () => {\n        let searchUrl = 'https://the-command-tower.herokuapp.com/'\n        // let searchUrl = 'http://localhost:9000/cards/'\n\n        if (props.searchParameters.name) {\n            searchUrl = searchUrl + `${props.searchParameters.name}/`\n        } else {\n            searchUrl = searchUrl + `null/`\n        }\n        if (props.searchParameters.set) {\n            searchUrl = searchUrl + `${props.searchParameters.set}/`\n        } else {\n            searchUrl = searchUrl + `null/`\n        }\n        if (props.searchParameters.white) {\n            searchUrl = searchUrl + `${props.searchParameters.white}/`\n        } else {\n            searchUrl = searchUrl + `null/`\n        }\n        if (props.searchParameters.blue) {\n            searchUrl = searchUrl + `${props.searchParameters.blue}/`\n        } else {\n            searchUrl = searchUrl + `null/`\n        }\n        if (props.searchParameters.black) {\n            searchUrl = searchUrl + `${props.searchParameters.black}/`\n        } else {\n            searchUrl = searchUrl + `null/`\n        }\n        if (props.searchParameters.green) {\n            searchUrl = searchUrl + `${props.searchParameters.green}/`\n        } else {\n            searchUrl = searchUrl + `null/`\n        }\n        if (props.searchParameters.red) {\n            searchUrl = searchUrl + `${props.searchParameters.red}/`\n        } else {\n            searchUrl = searchUrl + `null/`\n        }\n        if (props.searchParameters.colorless) {\n            searchUrl = searchUrl + `${props.searchParameters.colorless}/`\n        } else {\n            searchUrl = searchUrl + `null/`\n        }\n        if (props.searchParameters.supertype) {\n            searchUrl = searchUrl + `${props.searchParameters.supertype}/`\n        } else {\n            searchUrl = searchUrl + `null/`\n        }\n        if (props.searchParameters.type) {\n            searchUrl = searchUrl + `${props.searchParameters.type}/`\n        } else {\n            searchUrl = searchUrl + `null/`\n        }\n        if (props.searchParameters.subtype) {\n            searchUrl = searchUrl + `${props.searchParameters.subtype}/`\n        } else {\n            searchUrl = searchUrl + `null/`\n        }\n        console.log(searchUrl)\n\n        return searchUrl\n    }\n\n    useEffect(() => {\n        callAPI();\n    }, [props.searchParameters]); // eslint-disable-line react-hooks/exhaustive-deps\n\n\n    return (\n        <S.SearchResults>\n            {searchResults\n                ?\n                <div>\n                    <S.SearchHeader>Search Results</S.SearchHeader>\n                    <S.ResultInfo>Found {searchResults.length} cards</S.ResultInfo>\n                    <S.ResultsList>\n                        {searchResults.map((card) => {\n                            return <SearchResultCard\n                                card={card}\n                                key={card.id}\n                                userDecks={props.userDecks}\n                                handleAddCard={props.handleAddCard}\n                            />\n                        })}\n                    </S.ResultsList>\n\n                </div>\n\n                : \"waiting for API...\"}\n        </S.SearchResults>\n    )\n}\n\nexport default SearchResults","import React, { Component } from 'react';\nimport SearchForm from './SearchForm';\nimport SearchResults from './SearchResults';\n\nimport * as S from '../styles/SearchPageStyles';\n\nclass SearchPage extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: '',\n            set: '',\n            white: 'False',\n            blue: 'False',\n            black: 'False',\n            green: 'False',\n            red: 'False',\n            colorless: 'False',\n            supertype: 'Any',\n            type: 'Any',\n            subtype: 'Any'\n        }\n    }\n\n    handleInputChange = (e) => {\n        let inputValue;\n        if (e.target.type === 'checkbox') {\n            if (e.target.checked === true) {\n                inputValue = 'True'\n            } else {\n                inputValue = 'False'\n            }\n        } else {\n            inputValue = e.target.value\n        }\n\n        this.setState({\n            [e.target.name]: inputValue\n        });\n    }\n\n    render() {\n        return (\n            <S.SearchPage>\n                <SearchForm\n                    searchParameters={this.state}\n                    handleInputChange={this.handleInputChange}\n                    searchFields={this.props.searchFields}\n                />\n                <SearchResults\n                    searchParameters={this.state}\n                    userDecks={this.props.userDecks}\n                    handleAddCard={this.props.handleAddCard}\n                />\n            </S.SearchPage>\n        )\n    }\n}\n\nexport default SearchPage","import React from 'react'\n\nconst AccountPage = () => {\n    return (\n        <div>\n            <h2>Account Page</h2>\n        </div>\n    )\n}\n\n\nexport default AccountPage","import React, { useState, useEffect } from 'react'\nimport { useParams } from \"react-router-dom\";\nimport { Bold } from '../styles/GlobalStyle';\n\n\nconst CardShowPage = (props) => {\n    let { id } = useParams();\n\n    const [cardData, setCardData] = useState(null)\n    const [selectedDeckId, setSelectedDeckId] = useState(null)\n\n    let isCreature = false;\n    let isLegendary = false;\n    let commanderCandidate = false;\n\n    if (cardData) {\n        if (cardData.types) {\n            cardData.types.forEach(type => {\n                console.log(type)\n                if (type.type === \"Creature\") {\n                    isCreature = true;\n                }\n            });\n        }\n\n        if (cardData.supertypes) {\n            cardData.supertypes.forEach(supertype => {\n                console.log(supertype);\n                if (supertype.supertype === \"Legendary\") {\n                    isLegendary = true;\n                }\n            });\n        }\n\n        if (isCreature && isLegendary) {\n            console.log('commandoooooooo')\n            commanderCandidate = true;\n        }\n    }\n\n    let deckOptions = []\n    if (props.userDecks) {\n        props.userDecks.forEach(deck => {\n            console.log(deck.name)\n            deckOptions.push(\n                <option value={deck.id} key={deck.id} >{deck.name}</option>\n            )\n        })\n    }\n\n    const handleDeckChange = (e) => {\n        console.log(e.target.value)\n\n        setSelectedDeckId(e.target.value)\n    }\n\n\n    const callAPI = () => {\n        fetch(`https://the-command-tower.herokuapp.com/cards/show/${id}`)\n        // fetch(`http://localhost:9000/cards/show/${id}`)\n            .then(res => res.json())\n            .then(res => {\n                setCardData(res)\n            })\n            .catch(err => console.error(err))\n    }\n    useEffect(() => {\n        callAPI();\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n\n    return (\n        <div>\n            <h4>Card Show Page</h4>\n            {cardData &&\n                <div>\n                    <h3>{cardData.name}</h3>\n                    <img src={cardData.image_url} alt={`${cardData.name} card art`} />\n\n                    <h4>\n                        {cardData.supertypes && cardData.supertypes.map(supertype => {\n                            return <span key={supertype.id}>{supertype.supertype} </span>\n                        })}\n                        {cardData.types && cardData.types.map(type => {\n                            return <span key={type.id}>{type.type} </span>\n                        })}\n                        {cardData.subtypes && cardData.subtypes.map(subtype => {\n                            return <span key={subtype.id}> - {subtype.subtype} </span>\n                        })}\n                    </h4>\n                    <p>{cardData.text}</p>\n                    <p>{cardData.flavor}</p>\n                    {isCreature &&\n                        <div>\n                            <p><Bold>Power:</Bold> {cardData.power}</p>\n                            <p><Bold>Toughness:</Bold> {cardData.toughness}</p>\n                        </div>\n                    }\n                    <p><Bold>Rarity:</Bold> {cardData.rarity}</p>\n                    <p><Bold>Set:</Bold> {cardData.set_name}</p>\n                    {props.userDecks &&\n                        <form onSubmit={(e) => props.handleAddCard(e, cardData.id, selectedDeckId)} >\n                            <select\n                                onChange={handleDeckChange}\n                                defaultValue='Select Deck'\n                            >\n                                <option disabled hidden>Select Deck</option>\n\n                                {deckOptions}\n                            </select>\n                            {commanderCandidate &&\n                                <div>\n                                    <input type='checkbox' name='makeCommander' />\n                                    <label htmlFor=\"makeCommander\">Make Commander</label>\n                                </div>\n                            }\n                            <input type='submit' value='Add to Deck' />\n                        </form>\n                    }\n                </div>\n            }\n        </div>\n    )\n}\n\n\nexport default CardShowPage","import React, { useState } from 'react';\n\nconst NewDeckForm = (props) => {\n    const [formData, setFormData] = useState({\n        deckName: '',\n        deckDescription: '',\n        user_id: props.user_id\n    })\n\n    const handleChange = (e) => {\n        setFormData((prevState) => ({\n            ...prevState,\n            [e.target.name]: e.target.value\n          }));\n    }\n\n    return (\n        <form onSubmit={(e) => props.handleNewDeck(e, formData)} >\n            <h2>New Deck Form</h2>\n            <label htmlFor=\"deckName\">Deck Name: </label>\n            <input\n                type='text'\n                name='deckName'\n                value={formData.deckName}\n                onChange={handleChange}\n            />\n            <label htmlFor=\"deckDescription\">Deck Description: </label>\n            <input\n                type='text'\n                name='deckDescription'\n                value={formData.deckDescription}\n                onChange={handleChange}\n            />\n            <input type='submit' value='Add New Deck' />\n\n        </form>\n    )\n}\n\nexport default NewDeckForm","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst DeckBox = (props) => {\n    return (\n        <Link to={`/decks/${props.deck.id}`}>\n            <h3>{props.deck.name}</h3>\n            <p>{props.deck.description}</p>\n            <p>{props.deck.commander_id}</p>\n\n        </Link>\n    )\n}\n\nexport default DeckBox\n","import React, { useEffect } from 'react'\n\nimport NewDeckForm from './NewDeckForm';\nimport DeckBox from './DeckBox';\n\nconst DeckPage = (props) => {\n    // useEffect(() => {\n    //     props.handleGetDecks();\n    // }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n    return (\n        <div>\n            {props.currentUser ?\n            <div>\n                <h2>{props.currentUser.username}'s decks</h2>\n                <NewDeckForm \n                    handleNewDeck={props.handleNewDeck}\n                    user_id={props.currentUser.id}\n                />\n\n                <div>\n                    {props.userDecks &&\n                    <div>\n                        <p>we got decks</p>\n                        {props.userDecks.map((deck) => {\n                            return <DeckBox deck={deck} key={deck.id} />\n                        })}\n                    </div>\n                    }\n                </div>\n            </div>\n            :\n                <h3>You shouldn't be here...</h3>\n            }\n        </div>\n    )\n}\n\nexport default DeckPage","import React, { useEffect } from 'react'\nimport { useParams } from \"react-router-dom\";\nimport SearchResultCard from './SearchResultCard'\n\n\nconst DeckShowPage = (props) => {\n    let { deck_id } = useParams();\n\n    useEffect(() => {\n        props.handleGetSingleDeck(deck_id);\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n\n    return (\n        <div>\n            <h2>Deck Show Page</h2>\n            {props.deckData &&\n                <div>\n                    <h3>{props.deckData.name}</h3>\n                    <p>{props.deckData.cards.length} cards in deck</p>\n                    <div>\n                        {props.deckData.cards.map((card) => {\n                            return <SearchResultCard\n                                card={card}\n                                key={card.id}\n                            />\n                        })}\n                    </div>\n                </div>\n            }\n        </div>\n    )\n}\n\n\nexport default DeckShowPage\n","import Styled from \"styled-components\";\n\nexport const StyledAuthForm = Styled.form`\n    margin: 0 auto;\n    padding: 10px;\n`","import React, { Component } from 'react'\nimport * as A from \"../styles/AuthStyles\";\n\n\nclass RegisterForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: \"\",\n            password: \"\"\n        }\n    }\n\n    handleChange = (e) => {\n        const { name, value } = e.target;\n        this.setState({\n            [name]: value\n        })\n    }\n\n    render() {\n        return (\n            <A.StyledAuthForm onSubmit={(e) => this.props.handleRegister(e, this.state)} >\n                <h3>New Account</h3>\n                <label htmlFor=\"username\">Username: </label>\n                <input\n                    type='text'\n                    name='username'\n                    value={this.state.username}\n                    onChange={this.handleChange}\n                />\n                <label htmlFor=\"password\">Password: </label>\n                <input\n                    type='password'\n                    name='password'\n                    value={this.state.password}\n                    onChange={this.handleChange}\n                />\n                <input type='submit' value='Register' />\n            </A.StyledAuthForm>\n        )\n    }\n}\n\n\nexport default RegisterForm","import React, { Component } from 'react';\nimport * as A from \"../styles/AuthStyles\";\n\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: \"\",\n      password: \"\"\n    }\n  }\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value\n    })\n  }\n\n  render() {\n    return (\n      <A.StyledAuthForm onSubmit={(e) => this.props.handleLogin(e, this.state)}>\n        <h3>Log In</h3>\n        <label htmlFor=\"username\">Username: </label>\n        <input\n          type=\"text\"\n          name=\"username\"\n          value={this.state.username}\n          onChange={this.handleChange}\n        />\n        <label htmlFor=\"password\">Password: </label>\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={this.state.password}\n          onChange={this.handleChange}\n        />\n        <input type=\"submit\" value=\"Login\" />\n      </A.StyledAuthForm>\n    )\n  }\n}\n\nexport default LoginForm;","import axios from 'axios';\n\nconst api = axios.create({\n    baseURL: \"https://the-command-tower.herokuapp.com\" // heroku address goes here\n    // baseURL: \"http://localhost:9000\" // heroku address goes here\n})\n\n// ---------------------- Auth ---------------------- //\nexport const registerUser = async (registerData) => {\n    try {\n        const resp = await api.post('/auth/signup', registerData);\n        localStorage.setItem('authToken', resp.data.token);\n        api.defaults.headers.common.authorization = `Bearer ${resp.data.token}`;\n        return resp.data.user;\n        \n    } catch (err) {\n        console.error(err)\n    }\n    return false\n}\n\nexport const loginUser = async (loginData) => {\n    try {\n        const resp = await api.post('/auth/login', loginData);\n        localStorage.setItem('authToken', resp.data.token);\n        api.defaults.headers.common.authorization = `Bearer ${resp.data.token}`;\n        return resp.data.user;\n    } catch (err) {\n        console.error(err)\n    }\n    return false\n}\n\nexport const verifyUser = async () => {\n    const token = localStorage.getItem('authToken');\n    \n    if (token) {\n        api.defaults.headers.common.authorization = `Bearer ${token}`;\n        try {\n            const resp = await api.get('/auth/verify');\n            return resp.data\n        } catch (err) {\n            console.error(err)\n        }\n        \n    }\n    return false;\n}\n\n// ---------------------- Deck ---------------------- //\nexport const newDeck = async (formData) => {\n    try {\n        const resp = await api.post(`/decks/new`, formData);\n        return resp.data\n    } catch (err) {\n        console.error(err)\n    }\n    return false\n}\n\n\nexport const getUserDecks = async () => {\n    try {\n        const resp = await api.get('/decks');\n        return resp.data\n    } catch (err) {\n        console.error(err)\n    }\n    return false\n}\n\nexport const getDeck = async (deck_id) => {\n    try {\n        const resp = await api.get(`/decks/${deck_id}`);\n        return resp.data\n    } catch (err) {\n        console.error(err)\n    }\n    return false\n}\n\nexport const addDeckCard = async (deckCardIds) => {\n    try {\n        console.log(deckCardIds.card_id)\n        console.log(deckCardIds.deck_id)\n        const resp = await api.post('/decks/addCard', deckCardIds)\n        return resp.data\n    } catch (err) {\n        console.error(err)\n    }\n    return false\n}\n\n// ---------------------- Search ---------------------- //\nexport const getSupertypes = async () => {\n    try {\n        const resp = await api.get('/cards/supertypes');\n        return resp.data\n    } catch (err) {\n        console.error(err)\n    }\n    return false\n}\n\nexport const getTypes = async () => {\n    try {\n        const resp = await api.get('/cards/types');\n        return resp.data\n    } catch (err) {\n        console.error(err)\n    }\n    return false\n}\n\nexport const getSubtypes = async () => {\n    try {\n        const resp = await api.get('/cards/subtypes');\n        return resp.data\n    } catch (err) {\n        console.error(err)\n    }\n    return false\n}","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport SearchPage from './components/SearchPage';\nimport AccountPage from './components/AccountPage';\nimport CardShowPage from './components/CardShowPage';\nimport DeckPage from './components/DeckPage';\nimport DeckShowPage from './components/DeckShowPage';\nimport RegisterForm from './components/RegisterForm';\nimport LoginForm from './components/LoginForm';\nimport {\n  registerUser,\n  loginUser,\n  verifyUser,\n  getUserDecks,\n  newDeck,\n  addDeckCard,\n  getDeck,\n  getSupertypes,\n  getTypes,\n  getSubtypes,\n} from './services/api_helper';\nimport { Route, Switch } from 'react-router';\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentUser: null,\n      userDecks: null,\n      deckData: null,\n      searchFields: {\n        supertypes: null,\n        types: null,\n        subtypes: null\n      }\n    }\n  }\n\n  handleRegister = async (e, registerData) => {\n    e.preventDefault();\n    const currentUser = await registerUser(registerData);\n    this.setState({ currentUser })\n  }\n\n  handleLogin = async (e, loginData) => {\n    e.preventDefault();\n    const currentUser = await loginUser(loginData);\n    this.setState({ currentUser })\n  }\n\n  handleVerify = async () => {\n    const currentUser = await verifyUser();\n    if (currentUser) {\n      this.handleGetDecks();\n      this.setState({ currentUser });\n    }\n  }\n\n  handleLogout = () => {\n    localStorage.removeItem('authToken');\n    this.setState({ currentUser: null });\n  }\n\n  handleNewDeck = async (e, formData) => {\n    e.preventDefault();\n    await newDeck(formData);\n  }\n\n  handleGetDecks = async (user_id) => {\n    const userDecks = await getUserDecks();\n    if (userDecks) {\n      this.setState({ userDecks })\n    }\n  }\n\n  handleGetSingleDeck = async (deck_id) => {\n    const deckData = await getDeck(deck_id)\n    this.setState({ deckData })\n  }\n\n  handleAddCard = async (e, card_id, deck_id) => {\n    e.preventDefault()\n    const deckCardIds = {\n      card_id: card_id,\n      deck_id: deck_id\n    }\n    await addDeckCard(deckCardIds)\n  }\n\n  handlePopulateSearchFields = async () => {\n    const supertypes = await getSupertypes();\n    const types = await getTypes();\n    const subtypes = await getSubtypes();\n\n    this.setState({\n      searchFields: {\n        supertypes,\n        types,\n        subtypes\n      }\n    })\n  }\n\n  componentDidMount() {\n    this.handleVerify();\n    this.handlePopulateSearchFields();\n    if (this.state.currentUser) {\n      this.handleGetDecks();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header\n          currentUser={this.state.currentUser}\n          handleLogout={this.handleLogout}\n        />\n        <Switch>\n          <Route exact path=\"/\">\n            <SearchPage\n              userDecks={this.state.userDecks}\n              handleAddCard={this.handleAddCard}\n              searchFields={this.state.searchFields}\n            />\n          </Route>\n\n          <Route path=\"/account\" component={AccountPage} />\n\n          <Route path=\"/decks/:deck_id\" >\n            <DeckShowPage\n              handleGetSingleDeck={this.handleGetSingleDeck}\n              deckData={this.state.deckData}\n            />\n          </Route>\n\n          <Route path=\"/decks\">\n            <DeckPage\n              currentUser={this.state.currentUser}\n              userDecks={this.state.userDecks}\n              handleNewDeck={this.handleNewDeck}\n            />\n          </Route>\n\n          <Route path=\"/login\">\n            <LoginForm handleLogin={this.handleLogin} />\n          </Route>\n\n          <Route path=\"/register\">\n            <RegisterForm handleRegister={this.handleRegister} />\n          </Route>\n\n          <Route path=\"/card/:id\">\n            <CardShowPage\n              userDecks={this.state.userDecks}\n              handleAddCard={this.handleAddCard}\n            />\n          </Route>\n        </Switch>\n\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { GlobalStyle } from './styles/GlobalStyle';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <GlobalStyle />\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}